apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  - kind: ConfigMap
    name: fluence-monitoring-push
    valuesKey: metrics.yaml
    optional: true
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: false
      alertmanagerSpec:
        secrets: [testnet-fluence-url]
      config:
        route:
            group_wait: 30s
            group_interval: 5m
            repeat_interval: 12h
            receiver: 'slack-all'
            routes:
              - receiver: 'slack-all'
        receivers:
          - name: slack-all # temp ducktape to track alerts history
            slack_configs:
            - channel: "#testnet-fluence-alerts"
              api_url_file: /etc/alertmanager/secrets/testnet-fluence-url/secret-url
              send_resolved: true
              text: '{{ template "slack.myorg.text" . }}'
              icon_url: https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Prometheus_software_logo.svg/500px-Prometheus_software_logo.svg.png

      templateFiles:
              template_1.tmpl: |-
                {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}
          
                {{ define "slack.myorg.text" }}
                {{- $root := . -}}
                {{ range .Alerts }}
                  *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
                  *Cluster:* {{ template "cluster" $root }}
                  *Description:* {{ .Annotations.description }}
                  *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
                  *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
                  *Details:*
                    {{ range .Labels.SortedPairs }} - *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                {{ end }}
                {{ end }} 
    customRules:
      KubeStateMetricsListErrors:
        severity: info
      KubeClientCertificateExpiration:
        severity: info
      KubeControllerManagerDown:
        severity: info
      KubeProxyDown: # temp, need to fix talos
        severity: info
      KubeSchedulerDown:  # temp, need to fix talos
        severity: info
      PrometheusNotConnectedToAlertmanagers:
        severity: info
      PrometheusDuplicateTimestamps:
        severity: info
      # TargetDown:
      #   severity: info

    prometheusOperator:
        priorityClassName: spectrum-monitoring
    prometheus:
      prometheusSpec:
        priorityClassName: spectrum-monitoring
        externalLabels:
          cluster: "testlol"
        retention: 168h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi

        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelector:
          matchExpressions:
            - key: app.kubernetes.io/part-of
              operator: In
              values: 
              - "kube-prometheus-stack"
              - "kube-state-metrics"
              - "prometheus-node-exporter"
              - "spectrum-monitoring"
              - "lightmare"

        podMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/part-of: spectrum-monitoring

    grafana:
      priorityClassName: spectrum-monitoring
      defaultDashboardsEnabled: false
      adminPassword: fluence
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          folder: /var/lib/grafana/dashboards
          updateIntervalSeconds: 10
          folderAnnotation: grafana_folder
          provider:
            allowUiUpdates: true
            foldersFromFilesStructure: true

    kube-state-metrics:
      priorityClassName: spectrum-monitoring
    prometheus-node-exporter:
      priorityClassName: spectrum-monitoring
